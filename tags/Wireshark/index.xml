<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wireshark on 清松的笔记本</title><link>https://coderqs.github.io/tags/Wireshark/</link><description>Recent content in Wireshark on 清松的笔记本</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://coderqs.github.io/tags/Wireshark/index.xml" rel="self" type="application/rss+xml"/><item><title>Wireshark 常用过滤条件</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6/</guid><description>Wireshark 常用过滤条件 # 根据地址 # 指定 IP # ip 192.168.1.1 指定源 IP # ip.src 192.168.1.1 指定目标 IP # ip.dst 192.168.1.1 指定端口 # 指定 TCP 协议的端口 # tcp.prot 8080 指定 UDP 协议的端口 # udp.prot 8080 指定源端口(以TCP协议为例) # tcp.srcport 8080 指定目标端口(以TCP协议为例) # tcp.dstport 8080 根据时间 # 某一时刻的数据包 # frame.time == &amp;#34;May 27, 2019 15:23:57.932344000&amp;#34; 某一时刻之后的数据包 # frame.time &amp;gt;= &amp;#34;May 27, 2019 15:23:57.</description></item><item><title>Wireshark 遇见的问题的解决办法</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</guid><description>Wireshark 遇见的问题的解决办法 # 选择网卡时卡死无响应 # 在选择网卡后 Wireshark 就会卡死，然后进程未响应，重新打开又重复的卡死无响应的过程。打开任务管理器发现 Wireshark 内存占用迅速上涨，我这里是上涨了 1G 多。
这个跟 TLS 有关。因为我之前弄 webrtc 的时候配置了 https 的解密，并且没有还原配置，然后我浏览器有很久没有重启，导致浏览器的 sslkeylogfile 文件变得很大，而 Wireshark 开始抓包的时候会循环读取 sslkeylogflie 的内容，所以就出现卡死与崩溃的情况。
解决方法 # 方法一 # 重启浏览器，删除 sslkeylogflie 文件。这是临时解决方法，当 sslkeylogflie 文件变大后还是会出现这个问题。
方法二 # 还原 Wireshark 中关于 TLS 的配置。配置路径 编辑-&amp;gt;首选项-&amp;gt;Protocols-&amp;gt;TLS 。
参考资料 # 《Dive into Windbg系列》Wireshark的卡死与崩溃</description></item></channel></rss>