<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>框架/库 on 清松的笔记本</title><link>https://coderqs.github.io/%E6%A1%86%E6%9E%B6_%E5%BA%93/</link><description>Recent content in 框架/库 on 清松的笔记本</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://coderqs.github.io/%E6%A1%86%E6%9E%B6_%E5%BA%93/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://coderqs.github.io/%E6%A1%86%E6%9E%B6_%E5%BA%93/jsoncpp%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E6%A1%86%E6%9E%B6_%E5%BA%93/jsoncpp%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>Jsoncpp 使用方法 # jsoncpp 源码
示例 # 以这个 json 串为例
{ &amp;#34;item_0&amp;#34;:&amp;#34;一个普通的 json 元素&amp;#34;, &amp;#34;arrary&amp;#34;:[&amp;#34;数组元素1&amp;#34;, &amp;#34;数组元素1&amp;#34;], &amp;#34;empty_arrary&amp;#34;:[], &amp;#34;item_1&amp;#34;:{ &amp;#34;item_item_0&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;item_item_1&amp;#34;:&amp;#34;&amp;#34; } } 使用 在线工具检查 json 字符串是否合法，以及格式化、压缩转义等。
解析 json # 示例代码
int ParseJson(std::string json_str) { Json::Reader reader; Json::Value root; try { if (reader.parse(json_str, root)) { if (root.isMember(&amp;#34;item_0&amp;#34;)) std::cout &amp;lt;&amp;lt; root[&amp;#34;item_0&amp;#34;].asString() &amp;lt;&amp;lt; std::endl; if (root.</description></item></channel></rss>