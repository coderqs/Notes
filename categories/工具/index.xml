<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具 on 清松的笔记本</title><link>https://coderqs.github.io/categories/%E5%B7%A5%E5%85%B7/</link><description>Recent content in 工具 on 清松的笔记本</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://coderqs.github.io/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Let's Encrypt 免费 SSL 证书申请与续期</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/let_s_encrypt%E5%85%8D%E8%B4%B9ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E4%B8%8E%E7%BB%AD%E6%9C%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/let_s_encrypt%E5%85%8D%E8%B4%B9ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E4%B8%8E%E7%BB%AD%E6%9C%9F/</guid><description>Let&amp;rsquo;s Encrypt 免费 SSL 证书申请与续期 # Let&amp;rsquo;s Encrypt 是一个于2015年三季度推出的数字证书认证机构，旨在以自动化流程消除手动创建和安装证书的复杂流程，并推广使万维网服务器的加密连接无所不在，为安全网站提供免费的传输层安全性协议（TLS）证书。
Let&amp;rsquo;s Encrypt 由互联网安全研究小组（缩写 ISRG）提供服务。主要赞助商包括电子前哨基金会、Mozilla 基金会、Akamai 以及思科。2015年4月9日，ISRG 与 Linux 基金会宣布合作。
Let&amp;rsquo;s Encrypt 宣称这一过程将十分简单、自动化并且免费。
安装 certbot # certbot 是 Let&amp;rsquo;s Encrypt 的客户端。我的系统是 Centos，使用的是下面的命令
yum install -y certbot 使用 certbot --version 查看版本显示
certbot 1.12.0 是此时的最新版。如果不是还可以使用手动安装的方式，在 这里下载最新的发布包解压即可。
申请 ssl 证书 # 申请的命令格式一般是
certbot certonly -d &amp;#34;*.youdomain.com&amp;#34; --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory 其中：
certonly，表示使用的插件，Certbot 有很多插件。不同的插件都可以申请证书，这个可以根据需要自行选择。 -d，为哪些主机申请证书。如果是通配符，输入 *.youdomain.com（根据实际情况替换为你自己的域名）。 –preferred-challenges，使用 DNS 方式校验域名所有权。注：申请通配符证书，只能使用 dns-01 的方式。 –server，Let’s Encrypt ACME v2 版本使用的服务器不同于 v1 版本，需要显示指定 我使用的命令的是</description></item><item><title>OpenSSL 自签证书</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/openssl%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/openssl%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</guid><description>OpenSSL 自签证书 # 检查OpenSSL # 检查是否已经安装openssl：
openssl version 一般情况下系统会默认安装。
生成自签名的SSL证书和私钥 # 1. 生成私钥 # openssl genrsa -des3 -out server.pass.key 2048 参数解析:
genra 生成RSA私钥 -des3 des3算法 -out server.key 生成的私钥文件名 2048 私钥长度 2. 去除私钥中的密码 # openssl rsa -in server.pass.key -out server.key 注意：有密码的私钥是server.pass.key，没有密码的私钥是server.key
3. 生成CSR(证书签名请求) # openssl req -new -key server.key -out server.csr -subj &amp;#34;/C=CN/ST=Guangdong/L=Guangzhou/O=xdevops/OU=xdevops/CN=gitlab.xdevops.cn&amp;#34; req 生成证书签名请求 -new 新生成 -key 私钥文件 -out 生成的CSR文件 -subj 生成CSR证书的参数 subj 参数说明如下：</description></item><item><title>Pandoc</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/pandoc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/pandoc/</guid><description>Pandoc # 提供多种标记语言之间的转换的功能，但不完全是双向的，部分是单向的，可转换的关系请参考 此页面。
使用 # 较短的文字可以使用 在线版来转换，文字过长就需要 下载客户端来转换。
markdown 转 dokuwiki # pandoc -f markdown_github -t dokuwiki in_filename.md -o out_filename.txt 注：markdown 的语法分支比较多，要选对自己使用的是那种 markdown 语法。
参考资料 # Pandoc 用户指南</description></item><item><title>VMware 遇见的问题及解决方法</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E8%99%9A%E6%8B%9F%E6%9C%BA/vmware/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E8%99%9A%E6%8B%9F%E6%9C%BA/vmware/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</guid><description>VMware 遇见的问题及解决方法 # 虚拟机繁忙无法关机 # 这种问题出现的原因不明（有看到一些说法是 Windows 10 的某些版本和 VMware 兼容性的问题导致的，但也没找到明确的证据证明，都是凭感觉m(）
解决方法 # 1. 在任务管理器中关闭 vmware workstation vmx.exe 进程
2. 但我在这个地方遇到了问题：就是这个进程根本关不掉！！尝试了各种方法都关不掉！！网上有帖子说 是1903版本与vmware的兼容性问题，但也没有给出解决方案。
3. 通过 Windows 程序与功能将 VMware 修复(没有必要重装，一定不要动原来的虚拟机文件）。修复完成后，虚拟机就可以重新启动了。
参考自： Vmware Workstation虚拟机繁忙导致无法关机</description></item><item><title>Wireshark 常用过滤条件</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6/</guid><description>Wireshark 常用过滤条件 # 根据地址 # 指定 IP # ip 192.168.1.1 指定源 IP # ip.src 192.168.1.1 指定目标 IP # ip.dst 192.168.1.1 指定端口 # 指定 TCP 协议的端口 # tcp.prot 8080 指定 UDP 协议的端口 # udp.prot 8080 指定源端口(以TCP协议为例) # tcp.srcport 8080 指定目标端口(以TCP协议为例) # tcp.dstport 8080 根据时间 # 某一时刻的数据包 # frame.time == &amp;#34;May 27, 2019 15:23:57.932344000&amp;#34; 某一时刻之后的数据包 # frame.time &amp;gt;= &amp;#34;May 27, 2019 15:23:57.</description></item><item><title>Wireshark 遇见的问题的解决办法</title><link>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7/wireshark/%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</guid><description>Wireshark 遇见的问题的解决办法 # 选择网卡时卡死无响应 # 在选择网卡后 Wireshark 就会卡死，然后进程未响应，重新打开又重复的卡死无响应的过程。打开任务管理器发现 Wireshark 内存占用迅速上涨，我这里是上涨了 1G 多。
这个跟 TLS 有关。因为我之前弄 webrtc 的时候配置了 https 的解密，并且没有还原配置，然后我浏览器有很久没有重启，导致浏览器的 sslkeylogfile 文件变得很大，而 Wireshark 开始抓包的时候会循环读取 sslkeylogflie 的内容，所以就出现卡死与崩溃的情况。
解决方法 # 方法一 # 重启浏览器，删除 sslkeylogflie 文件。这是临时解决方法，当 sslkeylogflie 文件变大后还是会出现这个问题。
方法二 # 还原 Wireshark 中关于 TLS 的配置。配置路径 编辑-&amp;gt;首选项-&amp;gt;Protocols-&amp;gt;TLS 。
参考资料 # 《Dive into Windbg系列》Wireshark的卡死与崩溃</description></item></channel></rss>