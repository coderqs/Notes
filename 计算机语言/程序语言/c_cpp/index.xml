<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C/C++ on 清松的笔记本</title><link>https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/</link><description>Recent content in C/C++ on 清松的笔记本</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/errno%E9%94%99%E8%AF%AF%E7%A0%81%E8%AF%B4%E6%98%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/errno%E9%94%99%E8%AF%AF%E7%A0%81%E8%AF%B4%E6%98%8E/</guid><description>errno 错误码说明 关于 errno 的相关定义都在头文件 # /usr/include/asm/errno.h 中，下面是从文件中拷出来方便查询
#define EPERM 1 /* Operation not permitted */操作不允许 #define ENOENT 2 /\* No such file or directory \*/文件/路径不存在 #define ESRCH 3 /\* No such process \*/进程不存在 #define EINTR 4 /\* Interrupted system call \*/中断的系统调用 #define EIO 5 /\* I/O error \*/I/O错误 #define ENXIO 6 /\* No such device or address \*/设备/地址不存在 #define E2BIG 7 /\* Arg list too long \*/参数列表过长 #define ENOEXEC 8 /\* Exec format error \*/执行格式错误 #define EBADF 9 /\* Bad file number \*/错误文件编号 #define ECHILD 10 /\* No child processes \*/子进程不存在 #define EAGAIN 11 /\* Try again \*/重试 #define ENOMEM 12 /\* Out of memory \*/内存不足 #define EACCES 13 /\* Permission denied \*/无权限 #define EFAULT 14 /\* Bad address \*/地址错误 #define ENOTBLK 15 /\* Block device required \*/需要块设备 #define EBUSY 16 /\* Device or resource busy \*/设备或资源忙 #define EEXIST 17 /\* File exists \*/文件已存在 #define EXDEV 18 /\* Cross-device link \*/跨设备链路 #define ENODEV 19 /\* No such device \*/设备不存在 #define ENOTDIR 20 /\* Not a directory \*/路径不存在 #define EISDIR 21 /\* Is a directory \*/是路径 #define EINVAL 22 /\* Invalid argument \*/无效参数 #define ENFILE 23 /\* File table overflow \*/文件表溢出 #define EMFILE 24 /\* Too many open files \*/打开的文件过多 #define ENOTTY 25 /\* Not a typewriter \*/非打字机 #define ETXTBSY 26 /\* Text file busy \*/文本文件忙 #define EFBIG 27 /\* File too large \*/文件太大 #define ENOSPC 28 /\* No space left on device \*/设备无空间 #define ESPIPE 29 /\* Illegal seek \*/非法查询 #define EROFS 30 /\* Read-only file system \*/只读文件系统 #define EMLINK 31 /\* Too many links \*/链接太多 #define EPIPE 32 /\* Broken pipe \*/管道破裂 #define EDOM 33 /\* Math argument out of domain of func \*/参数超出函数域 #define ERANGE 34 /\* Math result not representable \*/结果无法表示 #define EDEADLK 35 /\* Resource deadlock would occur \*/资源将发生死锁 #define ENAMETOOLONG 36 /\* File name too long \*/文件名太长 #define ENOLCK 37 /\* No record locks available \*/没有可用的记录锁 #define ENOSYS 38 /\* Function not implemented \*/函数未实现 #define ENOTEMPTY 39 /\* Directory not empty \*/目录非空 #define ELOOP 40 /\* Too many symbolic links encountered \*/遇到太多符号链接 #define EWOULDBLOCK EAGAIN /\* Operation would block \*/操作会阻塞 #define ENOMSG 42 /\* No message of desired type \*/没有符合需求类型的消息 #define EIDRM 43 /\* Identifier removed \*/标识符已删除 #define ECHRNG 44 /\* Channel number out of range \*/通道编号超出范围 #define EL2NSYNC 45 /\* Level 2 not synchronized \*/level2不同步 #define EL3HLT 46 /\* Level 3 halted \*/3级停止 #define EL3RST 47 /\* Level 3 reset \*/3级重置 #define ELNRNG 48 /\* Link number out of range \*/链接编号超出范围 #define EUNATCH 49 /\* Protocol driver not attached \*/协议驱动程序没有连接 #define ENOCSI 50 /\* No CSI structure available \*/没有可用的CSI结构 #define EL2HLT 51 /\* Level 2 halted \*/2级停止 #define EBADE 52 /\* Invalid exchange \*/无效交换 #define EBADR 53 /\* Invalid request descriptor \*/无效请求描述 #define EXFULL 54 /\* Exchange full \*/交换完全 #define ENOANO 55 /\* No anode \*/无阳极 #define EBADRQC 56 /\* Invalid request code \*/无效请求码 #define EBADSLT 57 /\* Invalid slot \*/无效插槽 #define EDEADLOCK EDEADLK #define EBFONT 59 /\* Bad font file format \*/错误的字体文件格式 #define ENOSTR 60 /* Device not a stream */设备不是流 #define ENODATA 61 /* No data available */无数据 #define ETIME 62 /* Timer expired */计时器到期 #define ENOSR 63 /* Out of streams resources \*/流资源不足 #define ENONET 64 /* Machine is not on the network */机器不在网络上 #define ENOPKG 65 /\* Package not installed \*/包未安装 #define EREMOTE 66 /\* Object is remote \*/对象是远程 #define ENOLINK 67 /\* Link has been severed \*/链接正在服务中 #define EADV 68 /\* Advertise error \*/广告错误 #define ESRMNT 69 /\* Srmount error \*/？ #define ECOMM 70 /\* Communication error on send */发送过程中通讯错误 #define EPROTO 71 /\* Protocol error \*/协议错误 #define EMULTIHOP 72 /\* Multihop attempted \*/多跳尝试 #define EDOTDOT 73 /\* RFS specific error \*/RFS特定错误 #define EBADMSG 74 /\* Not a data message \*/不是数据类型消息 #define EOVERFLOW 75 /\* Value too large for defined data type \*/对指定的数据类型来说值太大 #define ENOTUNIQ 76 /\* Name not unique on network \*/网络上名字不唯一 #define EBADFD 77 /\* File descriptor in bad state \*/文件描述符状态错误 #define EREMCHG 78 /\* Remote address changed \*/远程地址改变 #define ELIBACC 79 /\* Can not access a needed shared library \*/无法访问需要的共享库 #define ELIBBAD 80 /\* Accessing a corrupted shared library \*/访问损坏的共享库 #define ELIBSCN 81 /\* .</description></item><item><title/><link>https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/gnu%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E6%8D%A2%E5%90%8D%E8%A7%84%E5%88%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coderqs.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/c_cpp/gnu%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E6%8D%A2%E5%90%8D%E8%A7%84%E5%88%99/</guid><description>GNU C++ 编译器的换名规则 # 全局变量 # 不做任何修改
全局函数 # 以_Z开头，然后是函数名字符的个数，接着是函数名，最后是函数参数的别名。
类或命名空间中的变量或函数 # 以_ZN开头，然后是变量或函数所在名字空间或类名字的字符长度，然后接着的是真正的名字空间或类名，然后是变量或函数名的长度和变量或函数名，后面紧跟字母E，最后如果是函数的话则跟参数别名，如果是变量则什么都不用加。
构造函数和析构函数 # 以_ZN开头，然后是构造函数所在名字空间和类名字的字符长度，然后接着的是真正的名字空间或类名，然后构造函数接C1或者C2，析构函数接D1或者D2，然后加上字母E，最后接函数参数别名结束。
函数的参数 # 是基本类型时 # 参数类型 参数别名 void v wchar_t w bool b char c signed char a unsigned char h short s unsigned short t int i unsigned int j long l unsigned long m long long或__int64 x unsigned long long或unsigned __int64 y __int128 n unsigned __int128 o float f double d long double或__float80 e __float128 g 是类或结构体时 # 在类或者结构体名字前加上类或结构体名的字符长度</description></item></channel></rss>